/***************************************************************************
                          libgost.h  -  описание
                             -------------------
    начало               : Mon Jul 14 2003
    авторство            : (C) 2003 разработчик 
    почта                : 
 ***************************************************************************/

/***************************************************************************
                          gostdll.h  -  описание
                             -------------------
    начало               : Thu Jul 10 2003
    авторство            : (C) 2003 разработчик 
    почта                : 
 ***************************************************************************/

#ifndef _GOSTDLL_H
#define _GOSTDLL_H

#include "Gost32.h"


//коды ошибок
#define CRYPTO_OK					0x00000000
#define CRYPTO_ERROR_CONTROL_SUM    0x00000001
#define CRYPTO_ERROR_BUFFER_LENGTH  0x00000002

//режимы шифрования
#define  ECB    0  //  простая замена (electronic code book)
#define  CBC    1  //  блочный шифр с обратной связью (chipher block chaining)
#define  CFB    2  //  гаммирование с обратной связью (chipher feedback)

//направление процесса
#define ENCRYPT  0
#define DECRYPT  1

#ifndef DWORD
#define DWORD unsigned long
#endif

#ifndef BYTE
#define BYTE unsigned char
#endif

/* зашифровывание или расшифровывание сообщения без вычисления имитовставки
 *
 * входные параметры:
 *
 * - Message        - блок информации, предназначенный для зашифровывания или 
 *                    расшифровывания;
 *
 * - MessageLength  - длина преобразовываемого сообщения в байтах;
 *
 * - Key            - ключ, 256 бит, представляется как массив из 8ми 
 *                    32-разрядных элементов, является секретным параметром;
 *
 * - Table          - таблица замен, матрица с размером 8 на 16 из 4-разрядных 
 *                    элементов, представляется как массив из 16ти 32-разрядных 
 *                    элементов, является долговременным ключевым элементом,
 *                    общим для сети ЭВМ;
 *
 * - Mode           - режим шифрования (ECB, CBC или CFB);
 *
 * - Direction      - направление процесса:
 *                    - ENCRYPT - зашифровывание;
 *                    - DECRYPT - расшифровывание;
 *
 * возвращаемое значение:
 *
 * - код ошибки:
 *   - (= 0x00000000) - преобразование успешно проведено;
 *   - (!=0x00000000) - в процессе проведения преобразования произошла ошибка;
 *
 * - результат преобразования располагается по адресу, переданному данной 
 *   функции в параметре Message;
 */
unsigned long EncryptMessage(unsigned char* Message, 
			      unsigned long MessageLength, 
			      unsigned long Key[8], 
			      unsigned long Table[16],
			      int Mode, 
			      int Direction);

/* вычисление имитовставки для заданного сообщения при указанных значениях 
 * ключа и таблицы замен, может добавляться к зашифрованным данным для
 * обеспечения имитозащиты
 *
 * входные параметры:
 *
 * - Message        - блок информации, для которого вычисляется значение
 *                    имитовставки;
 *
 * - MessageLength  - длина блока информации в байтах;
 *
 * - Key            - ключ, 256 бит, представляется как массив из 8ми 
 *                    32-разрядных элементов, является секретным параметром;
 *
 * - Table          - таблица замен, матрица с размером 8 на 16 из 4-разрядных 
 *                    элементов, представляется как массив из 16ти 32-разрядных 
 *                    элементов, является долговременным ключевым элементом,
 *                    общим для сети ЭВМ;
 *
 * возвращаемое значение:
 *
 * - вычисленная в результате анализа сообщения имитовставка
 */
unsigned long ImitMessage(unsigned char* Message, 
         unsigned long MessageLength, 
         unsigned long Key[8], 
         unsigned long Table[16]);

/* зашифровывание сообщения с одновременным вычислением имитовставки, 
 * или расшифровывание сообщения с проверкой его подлинности
 * с использованием имитовставки
 *
 * входные параметры:
 * - Message        - блок информации, предназначенный для зашифровывания или 
 *                    расшифровывания;
 * - ControlSum     - имитовставка, вычисляется при зашифровывании 
 *                    обрабатываемого блока и используется для проверки 
 *                    подлинности информации при расшифровывании, 
 * - MessageLength  - длина преобразовываемого сообщения в байтах;
 * - Key            - ключ, 256 бит, представляется как массив из 8ми 
 *                    32-разрядных элементов, является секретным параметром;
 * - Table          - таблица замен, матрица с размером 8 на 16 из 4-разрядных 
 *                    элементов, представляется как массив из 16ти 32-разрядных 
 *                    элементов, является долговременным ключевым элементом,
 *                    общим для сети ЭВМ;
 * - Mode           - режим шифрования (ECB, CBC или CFB);
 * - Direction      - направление процесса:
 *                    - ENCRYPT - зашифровывание;
 *                    - DECRYPT - расшифровывание;
 * возвращаемое значение:
 * - код ошибки:
 *   - (= 0x00000000) - преобразование успешно проведено;
 *   - (!=0x00000000) - в процессе проведения преобразования произошла ошибка;
 *
 * - результат преобразования располагается по адресу, переданному данной 
 *   функции в параметре Message;
 *                    
 * - вычисленная в результате зашифровывания сообщения имитовставка
 *   возвращается через параметр ControlSum, полученное значение имитовставки 
 *   зависит от используемых при обработке значений ключа и таблицы замен
 */
unsigned long EncryptMessageEx(unsigned char* Message,
         unsigned long& ControlSum,
         unsigned long MessageLength,
         unsigned long Key[8],
         unsigned long Table[16],
         int Mode,
         int Direction);

#endif
